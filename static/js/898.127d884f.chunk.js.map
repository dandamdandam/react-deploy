{"version":3,"file":"static/js/898.127d884f.chunk.js","mappings":"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","sources":["api/hooks/categories.mock.ts","api/hooks/products.mock.ts","api/hooks/users.mock.ts","api/hooks/wishlist.mock.ts","mocks/browser.ts"],"sourcesContent":["import { rest } from 'msw';\n\nimport { BASE_URL } from '../instance';\nimport { getCategoriesPath } from './useGetCategorys';\n\nexport const categoriesMockHandler = [\n  rest.get(getCategoriesPath(BASE_URL), (_, res, ctx) => {\n    return res(ctx.json(CATEGORIES_RESPONSE_DATA));\n  }),\n];\n\nconst CATEGORIES_RESPONSE_DATA = [\n  {\n    id: 2920,\n    name: '생일',\n    description: '감동을 높여줄 생일 선물 리스트',\n    color: '#5949a3',\n    imageUrl:\n      'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292020231106_MXMUB.png',\n  },\n  {\n    id: 2930,\n    name: '교환권',\n    description: '놓치면 후회할 교환권 특가',\n    color: '#9290C3',\n    imageUrl:\n      'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Fst.kakaocdn.net%2Fproduct%2Fgift%2Fproduct%2F20240131153049_5a22b137a8d346e9beb020a7a7f4254a.jpg',\n  },\n];\n","import { rest } from 'msw';\n\nimport { BASE_URL } from '../instance';\nimport { getProductDetailPath } from './useGetProductDetail';\nimport { getProductOptionsPath } from './useGetProductOptions';\nimport { getProductsPath } from './useGetProducts';\n\nexport const productsMockHandler = [\n  rest.get(\n    getProductsPath({\n      categoryId: '2920',\n    }, BASE_URL),\n    (_, res, ctx) => {\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\n    },\n  ),\n  rest.get(\n    getProductsPath({\n      categoryId: '2930',\n    }, BASE_URL),\n    (_, res, ctx) => {\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\n    },\n  ),\n  rest.get(getProductDetailPath(':productId', BASE_URL), (req, res, ctx) => {\n    const { productId } = req.params;\n    return res(ctx.json(PRODUCTS_MOCK_DATA.content.find((product) => product.id === Number(productId))));\n  }),\n  rest.get(getProductOptionsPath(':productId', BASE_URL), (_, res, ctx) => {\n    return res(\n      ctx.json([\n        {\n          id: 1,\n          name: 'Option A',\n          quantity: 10,\n          productId: 1,\n        },\n        {\n          id: 2,\n          name: 'Option B',\n          quantity: 20,\n          productId: 1,\n        },\n      ]),\n    );\n  }),\n];\n\nexport const PRODUCTS_MOCK_DATA = {\n  content: [\n    {\n      id: 3245119,\n      name: '[단독각인] 피렌체 1221 에디션 오드코롱 50ml (13종 택1)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215083306_8e1db057580145829542463a84971ae3.png',\n      price: 145000,\n    },\n    {\n      id: 2263833,\n      name: '외식 통합권 10만원권',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20200513102805_4867c1e4a7ae43b5825e9ae14e2830e3.png',\n      price: 100000,\n    },\n    {\n      id: 6502823,\n      name: '[선물포장/미니퍼퓸증정] 디켄터 리드 디퓨저 300ml + 메세지카드',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215112140_11f857e972bc4de6ac1d2f1af47ce182.jpg',\n      price: 108000,\n    },\n    {\n      id: 1181831,\n      name: '[선물포장] 소바쥬 오 드 뚜왈렛 60ML',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240214150740_ad25267defa64912a7c030a7b57dc090.jpg',\n      price: 122000,\n    },\n    {\n      id: 1379982,\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\n      price: 133000,\n    },\n    {\n      id: 1379982,\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\n      price: 133000,\n    },\n    {\n      id: 1379982,\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\n      price: 133000,\n    },   \n     {\n      id: 1379982,\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\n      price: 133000,\n    }, \n    {\n      id: 1379982,\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\n      price: 133000,\n    },\n    {\n      id: 1379982,\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\n      price: 133000,\n    },\n    {\n      id: 3245119,\n      name: '[단독각인] 피렌체 1221 에디션 오드코롱 50ml (13종 택1)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215083306_8e1db057580145829542463a84971ae3.png',\n      price: 145000,\n    },\n    {\n      id: 2263833,\n      name: '외식 통합권 10만원권',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20200513102805_4867c1e4a7ae43b5825e9ae14e2830e3.png',\n      price: 100000,\n    },\n    {\n      id: 6502823,\n      name: '[선물포장/미니퍼퓸증정] 디켄터 리드 디퓨저 300ml + 메세지카드',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215112140_11f857e972bc4de6ac1d2f1af47ce182.jpg',\n      price: 108000,\n    },\n    {\n      id: 1181831,\n      name: '[선물포장] 소바쥬 오 드 뚜왈렛 60ML',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240214150740_ad25267defa64912a7c030a7b57dc090.jpg',\n      price: 122000,\n    },\n    {\n      id: 1379982,\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\n      price: 133000,\n    },\n    {\n      id: 3245119,\n      name: '[단독각인] 피렌체 1221 에디션 오드코롱 50ml (13종 택1)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215083306_8e1db057580145829542463a84971ae3.png',\n      price: 145000,\n    },\n    {\n      id: 2263833,\n      name: '외식 통합권 10만원권',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20200513102805_4867c1e4a7ae43b5825e9ae14e2830e3.png',\n      price: 100000,\n    },\n    {\n      id: 6502823,\n      name: '[선물포장/미니퍼퓸증정] 디켄터 리드 디퓨저 300ml + 메세지카드',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215112140_11f857e972bc4de6ac1d2f1af47ce182.jpg',\n      price: 108000,\n    },\n  ],\n  number: 0,\n  totalElements: 5,\n  size: 10,\n  last: false,\n};\n","import { rest } from 'msw';\n\nimport { BASE_URL } from '../instance';\nimport { getUserPath, getUsersPath } from './useGetUser';\n\nexport const usersMockHandler = [\n  rest.post(getUsersPath(BASE_URL), async (req, res, ctx) => {\n    try{\n        const { email, password } = await req.json();\n        if (!email || !password) {\n            return await res(ctx.status(400));\n        }\n        usersMockData.push({ email, password, token: email+'token' });\n        return await res(ctx.status(201));\n    } catch (error) {\n        return res(ctx.status(400));\n    }\n  }),\n  rest.post(getUserPath(BASE_URL), async (req, res, ctx) => {\n    try {\n      const { email, password } = await req.json();\n      if (!email || !password) {\n        return await res(ctx.status(400));\n      }\n\n      const result = usersMockData.find((user) => user.email === email);\n\n      if (result && result.password === password) {\n        return await res(\n          ctx.status(200), ctx.set('token', result.token)\n        );\n      } else {\n        return await res(ctx.status(404));\n      }\n    } catch (error) {\n      return res(ctx.status(400));\n    }\n  }),\n];\n\nconst usersMockData = [{\n  email: 'testUser@test.com',\n  password: '0',\n  token: 'testUser@test.comtoken',\n}];","import { rest } from 'msw';\n\nimport { BASE_URL } from '../instance';\nimport { PRODUCTS_MOCK_DATA } from './products.mock';\nimport { deleteWishlistPath, getWishlistPath, postWishlistPath, type WishData } from './useGetWishlist';\n\nexport const wishlistMockHandler = [\n    rest.post(postWishlistPath(BASE_URL), async (req, res, ctx) => {\n        const { productId } = await req.json();\n        const authToken = req.headers.get('Authorization')?.split(' ')[1];\n        if(!productId || !authToken) {\n            return res(ctx.status(400));\n        }\n        const product: WishData[\"product\"] | undefined= PRODUCTS_MOCK_DATA.content.find((_product) => _product.id === productId);\n        if (!product) {\n            return res(ctx.status(400));\n        }\n        wishlistMockData.push({\n            id: wishlistMockData.length + 1,\n            product,\n            createdDate: new Date(Date.now()), \n            user: authToken\n        });\n\n        return res(ctx.status(201));\n    }),\n    rest.delete(deleteWishlistPath(':wishId', BASE_URL), (req, res, ctx) => {\n        const { wishId } = req.params;\n\n        const index = wishlistMockData.findIndex((wish) => wish.id === Number(wishId));\n        if (index === -1) {\n            return res(ctx.status(404));\n        }\n\n        wishlistMockData.splice(index, 1);\n        return res(ctx.status(204));\n    }),\n    rest.get(getWishlistPath({}, BASE_URL), (req, res, ctx) => {\n        const url = new URL(req.url);\n        const authToken = req.headers.get('Authorization')?.split(' ')[1];\n        const page = url.searchParams.get('page');\n        const size = url.searchParams.get('size');\n        const sort = url.searchParams.get('sort');\n\n        const result = wishlistMockData.filter((wish) => wish.user === authToken)\n        if(page && size)\n            result.slice(Number(page) * Number(size), Number(page) * Number(size) + Number(size));\n        if(sort){\n            // TODO: sort 키워드 확인 후 정렬 로직 추가\n            const [ key, order ] = sort.split(',');\n            if(key === 'createdDate')\n                result.sort((a, b) => {\n                    if(order === 'asc')\n                        return a.createdDate.getTime() - b.createdDate.getTime();\n                    else\n                        return b.createdDate.getTime() - a.createdDate.getTime();\n                });\n        }\n\n        return res(ctx.json({content: result}));\n    }),\n];\n\n\nconst wishlistMockData: (WishData & {user: string})[] = [{\n    id: 1,\n    product: PRODUCTS_MOCK_DATA.content[0],\n    createdDate: new Date('2021-09-01'), \n    user: 'testUser@test.comtoken',\n}]","import { setupWorker } from 'msw';\n\nimport { categoriesMockHandler } from '@/api/hooks/categories.mock';\nimport { productsMockHandler } from '@/api/hooks/products.mock';\nimport { usersMockHandler } from '@/api/hooks/users.mock';\nimport { wishlistMockHandler } from '@/api/hooks/wishlist.mock';\n\nexport const worker = setupWorker(\n    ...categoriesMockHandler,\n    ...productsMockHandler,\n    ...usersMockHandler,\n    ...wishlistMockHandler\n);"],"names":["categoriesMockHandler","rest","get","getCategoriesPath","BASE_URL","_","res","ctx","json","CATEGORIES_RESPONSE_DATA","id","name","description","color","imageUrl","productsMockHandler","getProductsPath","categoryId","PRODUCTS_MOCK_DATA","getProductDetailPath","req","productId","params","content","find","product","Number","getProductOptionsPath","quantity","price","number","totalElements","size","last","usersMockHandler","post","getUsersPath","async","email","password","usersMockData","push","token","status","error","getUserPath","result","user","set","wishlistMockHandler","postWishlistPath","_req$headers$get","authToken","headers","split","_product","wishlistMockData","length","createdDate","Date","now","delete","deleteWishlistPath","wishId","index","findIndex","wish","splice","getWishlistPath","_req$headers$get2","url","URL","page","searchParams","sort","filter","slice","key","order","a","b","getTime","worker","setupWorker"],"sourceRoot":""}